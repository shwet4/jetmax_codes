;; Auto-generated. Do not edit!


(when (boundp 'jetmax_control::ActionSetRawFeedback)
  (if (not (find-package "JETMAX_CONTROL"))
    (make-package "JETMAX_CONTROL"))
  (shadow 'ActionSetRawFeedback (find-package "JETMAX_CONTROL")))
(unless (find-package "JETMAX_CONTROL::ACTIONSETRAWFEEDBACK")
  (make-package "JETMAX_CONTROL::ACTIONSETRAWFEEDBACK"))

(in-package "ROS")
;;//! \htmlinclude ActionSetRawFeedback.msg.html


(defclass jetmax_control::ActionSetRawFeedback
  :super ros::object
  :slots (_index _count ))

(defmethod jetmax_control::ActionSetRawFeedback
  (:init
   (&key
    ((:index __index) 0)
    ((:count __count) 0)
    )
   (send-super :init)
   (setq _index (round __index))
   (setq _count (round __count))
   self)
  (:index
   (&optional __index)
   (if __index (setq _index __index)) _index)
  (:count
   (&optional __count)
   (if __count (setq _count __count)) _count)
  (:serialization-length
   ()
   (+
    ;; uint32 _index
    4
    ;; uint32 _count
    4
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; uint32 _index
       (write-long _index s)
     ;; uint32 _count
       (write-long _count s)
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; uint32 _index
     (setq _index (sys::peek buf ptr- :integer)) (incf ptr- 4)
   ;; uint32 _count
     (setq _count (sys::peek buf ptr- :integer)) (incf ptr- 4)
   ;;
   self)
  )

(setf (get jetmax_control::ActionSetRawFeedback :md5sum-) "9bd522b74b786e5c761ef1c23a598fdf")
(setf (get jetmax_control::ActionSetRawFeedback :datatype-) "jetmax_control/ActionSetRawFeedback")
(setf (get jetmax_control::ActionSetRawFeedback :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
uint32 index
uint32 count

")



(provide :jetmax_control/ActionSetRawFeedback "9bd522b74b786e5c761ef1c23a598fdf")


